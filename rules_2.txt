Hand(number)
Card(value, suit)
Cards(card1, card2, suited=None)
Player(name, chips, BB's, cards?, me=true/false, group?, seat)
Blind(small, big)
Seat(number, name)

// regra de contar BB
// REGRA Do me
// regra 

> NOTA o == off e s == suited

se Blind exists
    e Player.BB = none
entao
    retract player.bb = player.chips/blind.big

se Player.cards exists
entao
    retract player.me = true

se Player.seat = none
    e Seat.name = Player.name
entao
    retract Player.seat = seat.number


se  Player.cards
    e suited=none
    e card1.suit == card2.stuit

    retract suited = true


se cartas Player.cards
    e suited=none
    e card1.suit != card2.stuit

    retract suited = false

se cartas Player.cards sao
    AA, KK
e me=true
 entao
    retract GRUPO 1

se cartas Player.cards sao
   QQ, AKs, AKo, JJ
e me=true
 entao
    retract GRUPO 2


se cartas Player.cards sao
   QQ, AKs, AKo, JJ
e me=true
 entao
    retract GRUPO 2

se cartas Player.cards sao
   AQs, AQo, TT, 99
e me=true
 entao
    retract GRUPO 3


se cartas Player.cards sao
    AJs, KQs, 88, 77
e me=true
 entao
    retract GRUPO 4


se cartas Player.cards sao
    AJo, ATs, ATo, KQo, KJs, 66, 55
e me=true
 entao
    retract GRUPO 5

se cartas Player.cards sao
     A9s-A2s, KJo, KTs, QJs, QTs, JTs, 44, 33, 22
e me=true
 entao
    retract GRUPO 6

se cartas Player.cards sao
      A9-A2, KTo, QJo, QTo, JTo, T9s, 98s, 87s, 76s, 65s, 54s
e me=true
 entao
    retract GRUPO 7


se cartas Player.cards sao
      K9s, K9o, K8s, K8o, Q9s, Q8s, J9s, T8s, T9o, 97s, 98o, 86s, 87o, 75s, 76o, 64s
e me=true
 entao
    retract GRUPO 8




